// LoginScreen.tsx
import React, { useState } from "react";
import {
  View,
  Text,
  TextInput,
  Button,
  StyleSheet,
  Alert,
  ImageBackground,
  TouchableOpacity,
} from "react-native";
import { useRouter } from "expo-router";
import AsyncStorage from "@react-native-async-storage/async-storage";
import { loginUser } from "../constants/apiService";

export default function LoginScreen() {
  const router = useRouter();
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState<string | null>(null);
  const [rememberMe, setRememberMe] = useState(false);

  const handleLogin = async () => {
    setError(null);

    try {
      const data = await loginUser(email, password);
      console.log("üì• Response t·ª´ server:", data);

      if (data.token) {
        await AsyncStorage.setItem("token", data.token);
        Alert.alert("‚úÖ Th√†nh c√¥ng", "ƒêƒÉng nh·∫≠p th√†nh c√¥ng!");
        router.push("/dashboard");
      } else {
        setError("Kh√¥ng nh·∫≠n ƒë∆∞·ª£c token t·ª´ server.");
      }
    } catch (error: any) {
      console.error("üî• L·ªói ƒëƒÉng nh·∫≠p:", error.message);
      setError(error.message || "Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server!");
    }
  };

  return (
    <ImageBackground
      source={require("../assets/images/anhbiakhach.jpg")}
      style={styles.backgroundImage}
    >
      <View style={styles.overlay}>
        <View style={styles.header}>
          <ImageBackground
            source={require("../assets/images/doituyencc.png")} // Logo MU
            style={styles.logo}
          />
          <Text style={styles.title}>FIBO</Text>
        </View>

        <Text style={styles.inputLabel}>T√†i kho·∫£n*</Text>
        <TextInput
          style={styles.input}
          placeholder="Email"
          value={email}
          onChangeText={setEmail}
          keyboardType="email-address"
          autoCapitalize="none"
        />

        <Text style={styles.inputLabel}>M·∫≠t kh·∫©u*</Text>
        <TextInput
          style={styles.input}
          placeholder="M·∫≠t kh·∫©u"
          secureTextEntry
          value={password}
          onChangeText={setPassword}
        />

        <View style={styles.rememberMeContainer}>
          <TouchableOpacity onPress={() => setRememberMe(!rememberMe)}>
            <Text style={styles.rememberMeText}>
              {rememberMe ? "‚òë" : "‚òê"} Remember me
            </Text>
          </TouchableOpacity>

          {/* Th√™m "Qu√™n m·∫≠t kh·∫©u?" b√™n ph·∫£i */}
          <TouchableOpacity onPress={() => router.push("/forgot-password")}>
            <Text style={styles.forgotPasswordText}>Qu√™n m·∫≠t kh·∫©u?</Text>
          </TouchableOpacity>
        </View>

        {error && <Text style={styles.error}>{error}</Text>}

        <View style={styles.buttonsContainer}>
          <Button title="ƒêƒÉng Nh·∫≠p" onPress={handleLogin} color="#ff6200" />
        </View>

        <View style={styles.orContainer}>
          <View style={styles.line}></View>
          <Text style={styles.orText}>OR</Text>
          <View style={styles.line}></View>
        </View>

        <TouchableOpacity onPress={() => router.push("/register")} style={styles.registerButton}>
          <Text style={styles.registerText}>ƒêƒÉng k√Ω</Text>
        </TouchableOpacity>
      </View>
    </ImageBackground>
  );
}

// Ph·∫ßn styles ƒë√£ c·∫£i ti·∫øn
const styles = StyleSheet.create({
  backgroundImage: {
    flex: 1,
    width: "100%",
    height: "100%",
    resizeMode: "cover",
  },
  overlay: {
    flex: 1,
    backgroundColor: "rgba(0, 0, 0, 0.5)",
    justifyContent: "space-between", // Thay ƒë·ªïi ƒë·ªÉ cƒÉn ch·ªânh ph·∫ßn t·ª≠ xu·ªëng d∆∞·ªõi
    alignItems: "center",
    padding: 20,
    paddingBottom: 40, // Cung c·∫•p kh√¥ng gian cho c√°c n√∫t ·ªü d∆∞·ªõi c√πng
  },
  header: {
    alignItems: "center",
    marginBottom: 30,
  },
  logo: {
    width: 100,
    height: 100,
    marginBottom: 10,
  },
  title: {
    fontSize: 28,
    fontWeight: "bold",
    color: "white",
  },
  inputLabel: {
    alignSelf: "flex-start",
    color: "white",
    fontSize: 14,
  },
  input: {
    width: "100%",
    padding: 10,
    backgroundColor: "white",
    borderWidth: 1,
    borderColor: "gray",
    
  },
  rememberMeContainer: {
    flexDirection: "row",
    justifyContent: "space-between", // CƒÉn l·ªÅ ƒë·ªÉ hai ph·∫ßn nh·ªõ t√¥i v√† qu√™n m·∫≠t kh·∫©u n·∫±m c·∫°nh nhau
    alignItems: "center",
    width: "100%",
    marginBottom: 10,
  },
  rememberMeText: {
    color: "white",
    fontSize: 16,
  },
  forgotPasswordText: {
    color: "lightblue",
    fontSize: 16,
    textDecorationLine: "underline",
  },
  error: {
    color: "red",
    marginBottom: 10,
  },
  buttonsContainer: {
    width: "100%",
    marginBottom: 10, // Th√™m kho·∫£ng c√°ch d∆∞·ªõi n√∫t ƒëƒÉng nh·∫≠p
  },
  orContainer: {
    flexDirection: "row",
    alignItems: "center",
    marginVertical: 20,
    width: "100%",
  },
  line: {
    flex: 1,
    height: 1,
    backgroundColor: "white",
  },
  orText: {
    color: "white",
    fontSize: 16,
    paddingHorizontal: 10,
  },
  registerButton: {
    width: "100%",
    paddingVertical: 15,
    backgroundColor: "#ff0040",
    borderRadius: 5,
    marginTop: 20,
    alignItems: "center",
  },
  registerText: {
    fontSize: 18,
    color: "white",
    fontWeight: "bold",
  },
});
